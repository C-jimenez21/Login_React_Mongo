//db
use("Login-React")
db.createCollection("users", {
    capped: true,
    size: 5000,
    max: 50,
    validator:{
        $jsonSchema:{
            bsonType: "object",
            additionalProperties: false,
            required : ['_id','username', 'email', 'password','rol'],
            properties:{
                _id:{
                    bsonType: 'objectId',
                    description : "{status: 406, message: 'El id es un parametro obligatorio y debe ser un entero'}"
                },
                username:{  
                    bsonType: 'string',
                    description : "{status: 406, message: 'El Usuario es un parametro obligatorio y debe ser un string'}"
                },
                email:{  
                    bsonType: 'string',
                    description : "{status: 406, message: 'El Correo es un parametro obligatorio y debe ser un string'}"
                },
                password:{  
                    bsonType: 'string',
                    description : "{status: 406, message: 'La contrase√±a es un parametro obligatorio y debe ser un string'}"
                },
                rol:{  
                    bsonType: 'int',
                    description : "{status: 406, message: 'El rol es un parametro obligatorio y debe ser un int'}"
                }
            }
        }
    }
})

db.users.createIndex( { "email": 1, "username": 1 }, { unique: true } )

use("Login-React")
db.users.insertMany([
  {
      _id: ObjectId(),
      username: "camper2",
      email: "camper2@example.com",
      password: "camper123",
      rol: 1
  },
  {
      _id: ObjectId(),
      username: "admin2",
      email: "admin2@example.com",
      password: "admin123",
      rol: 2
  },
  {
      _id: ObjectId(),
      username: "trainer2",
      email: "trainer2@example.com",
      password: "trainer123",
      rol: 3
  }
]);